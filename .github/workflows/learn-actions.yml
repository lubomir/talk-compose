name: build
on: [push]
jobs:
  build-app:
    runs-on: ubuntu-latest
    steps:
      - name: Cache stack directory
        uses: actions/cache@v2
        env:
          cache-name: cache-stack-dir
        with:
          path: ~/.stack
          key: ${{ runner.os }}-build-${{ env.cache-name }}
      - uses: actions/checkout@v2
      - run: mkdir -p ~/.local/bin
      - run: export PATH=$HOME/.local/bin:$PATH
      - run: curl -L https://www.stackage.org/stack/linux-x86_64 | tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack'
      - run: chmod +x ~/.local/bin/stack
      - run: stack docker pull
      - run: stack --no-terminal build --docker --install-ghc
      - run: cp -v .stack-work/install/*/*/*/bin/talk-compose-* .
      - run: tar cvf tarball.tar.xz static/ talk-compose-web talk-compose-consumer
      - name: Upload build file
        uses: actions/upload-artifact@v2
        with:
          path: tarball.tar.xz
          name: tarball.tar.xz
          retention-days: 2

  publish-app:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: build-app
    steps:
      - name: Set tarball name
        id: vars
        run: echo ::set-output name=tarball::tc-$(echo $GITHUB_REF | cut -d"/" -f3).tar.xz
      - name: Download build
        uses: actions/download-artifact@v2
        with:
          name: tarball.tar.xz
      - name: Create a release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Publish build to releases
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: tarball.tar.xz
          asset_name: ${{ steps.vars.outputs.tarball }}
